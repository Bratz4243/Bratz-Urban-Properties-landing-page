// next.config.mjs
const isProjectPage = process.env.GITHUB_REPOSITORY?.split("/")[1] !== `${process.env.GITHUB_REPOSITORY_OWNER}.github.io`;
const repo = process.env.GITHUB_REPOSITORY?.split("/")[1] ?? ""; // e.g. "bratz-urban-properties"

export default {
  output: "export",                // enables `next export`
  images: { unoptimized: true },   // required for static export since you're using next/image
  trailingSlash: true,
  // If this is a project page (not <user>.github.io), serve under /<repo>/
  basePath: isProjectPage ? `/${repo}` : undefined,
  assetPrefix: isProjectPage ? `/${repo}/` : undefined,
};
{
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "export": "next export",
    "build:pages": "next build && next export"
  }
}
name: Deploy to GitHub Pages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps
        run: npm ci

      - name: Build & Export static site
        env:
          # Helps next.config detect repo name for basePath/assetPrefix
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
        run: npm run build:pages

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
git add .
git commit -m "Configure GitHub Pages deployment"
git push origin main
